{"code":"!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t){onLoad=(()=>{mapboxgl.accessToken=\"pk.eyJ1IjoieWFzZXZwbGF0b24iLCJhIjoiY2poaTJrc29jMDF0YzM2cDU1ZnM1c2xoMiJ9.FhmWdHG7ar14dQv1Aoqx4A\";const e=new mapboxgl.Map({container:\"map\",style:\"mapbox://styles/mapbox/dark-v9\",center:[37.64,55.75],zoom:8});e.on(\"load\",()=>{document.getElementById(\"loading-map-panel\").remove(),document.getElementById(\"greeting-panel\").classList.remove(\"hidden\");const t=document.getElementById(\"btn-demo\"),n=document.getElementById(\"btn-upload\"),a=document.getElementById(\"main-interface-wrapper\"),o=document.getElementById(\"inputGoodsTable\"),d=document.getElementById(\"btn-submit\"),l=document.getElementById(\"loading-data-panel\"),r=document.getElementById(\"edit-interface-wrapper\"),i=document.getElementById(\"color-table-body\"),s=document.getElementById(\"widthSlider\"),c=document.getElementById(\"min-width-input\"),u=document.getElementById(\"max-width-input\"),m=document.getElementById(\"junctions-checkbox\"),g=document.getElementById(\"background-lines-checkbox\"),h=document.getElementById(\"edges-checkbox\");let f,y,p;function v(t,n){f=o.files[0],l.classList.add(\"hidden\"),a.classList.contains(\"hidden\")&&a.classList.remove(\"hidden\"),r.classList.remove(\"hidden\");const d=1;let y=getBoundingBox(n),p=getFlowValues(t),v=classifyFlowValuesArray(p,4),b=getCargoTypes(t),E=getRandomCargoColorArray(b),L={type:\"FeatureCollection\",features:[]},B=collectLinesIDs(t);fillAdjacentLinesAttr(n,t),fillOrigLines(B,L,t);c.value=2,u.value=20,widthArray=getWidthArray(2,20),calculateWidth(t,widthArray,v),calculateOffset(t,d),addWidthAttr(L,t,d,b),calculateShadowOffset(L,12),n.features.forEach(e=>{addRadiusAttr(L,e,b)}),renderEdges(e,t,E,n),renderOrigLines(e,L,d),renderNodes(e,n),createColorTable(i,E,t,e),createSlider(s,2,20,100);let I=0;function j(){widthArray=getWidthArray(+c.value,+u.value),calculateWidth(t,widthArray,v),calculateOffset(t,d),addWidthAttr(L,t,d,b),n.features.forEach(e=>{addRadiusAttr(L,e,b)}),renderEdges(e,t,E,n),renderNodes(e,n)}s.noUiSlider.on(\"update\",function(e,t){if(0===I||1===I)return void(I+=1);let n=e[t];t?(u.value=Math.round(n),j()):(c.value=Math.round(n),j())}),c.addEventListener(\"change\",function(){this.value>+u.value?(c.value=u.value,s.noUiSlider.set([+u.value,null])):s.noUiSlider.set([this.value,null])}),u.addEventListener(\"change\",function(){this.value<+c.value?(u.value=c.value,s.noUiSlider.set([null,+c.value])):s.noUiSlider.set([null,this.value])}),m.addEventListener(\"click\",()=>{toggleLayerVisibility(m,e,\"junctions\")}),g.addEventListener(\"click\",()=>{toggleLayerVisibility(g,e,\"background-lines\")}),h.addEventListener(\"click\",()=>{b.forEach(t=>{toggleLayerVisibility(h,e,t)})}),e.fitBounds([[y.xMin,y.yMin],[y.xMax,y.yMax]],{linear:!1,speed:.3})}d.addEventListener(\"click\",e=>{e.preventDefault(),f&&(o.files[0].name=f.name)?alert(\"Выбран тот же файл! Пожалуйста, выберите другой.\"):o.files[0]?(l.classList.remove(\"hidden\"),y=fetch(\"https://yasevplaton.pythonanywhere.com/upload_data\",{method:\"POST\",body:o.files[0]}).then(e=>e.json()),p=fetch(\"data/pointsVolga.geojson?ass=\"+Math.random()).then(e=>e.json()),Promise.all([y,p]).then(([e,t])=>v(e,t)).catch(e=>{l.classList.add(\"hidden\"),alert(\"Увы, произошла какая-то ошибка :( Если вы разработчик, можете глянуть в консоли и зарепортить багу на гитхабе https://github.com/yasevplaton/linear-cartodiagram. Если вы не понимаете, что такое консоль, бага или гитхаб, обратитесь в службу поддержки по адресу yasevplaton@gmail.com\"),console.error(\"Error with loading of data:\",e)})):alert(\"Сначала нужно выбрать файл!\")}),n.addEventListener(\"click\",()=>{document.getElementById(\"greeting-panel\").classList.add(\"hidden\"),a.classList.remove(\"hidden\")}),t.addEventListener(\"click\",()=>{document.getElementById(\"greeting-panel\").classList.add(\"hidden\"),l.classList.remove(\"hidden\"),y=fetch(\"data/edgesVolgaAssym.geojson?ass=\"+Math.random()).then(e=>e.json()),p=fetch(\"data/pointsVolga.geojson?ass=\"+Math.random()).then(e=>e.json()),Promise.all([y,p]).then(([e,t])=>v(e,t)).catch(e=>console.error(\"Error with loading of data:\",e))})})})}]);","extractedComments":[]}